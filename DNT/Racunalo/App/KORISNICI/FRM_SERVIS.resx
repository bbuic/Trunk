<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAMAMDAAAAEACACoDgAANgAAACAgAAABAAgAqAgAAN4OAAAQEAAAAQAIAGgFAACGFwAAKAAAADAA
        AABgAAAAAQAIAAAAAAAACQAAAAAAAAAAAAAAAQAAAAEAAAAAAAAwMDAANjY2AD09PQBJPT0ASklJAFpG
        RgBWVVUAXV1dAHlVVQBqdUgAZGRkAG5kZAB4ZWUAcnJyAH19fQDceAUAiV5eALV+XgCJZmQAlWVlAJlm
        ZgCZa2YAk21tAJ9sawCYb3AAhX54AJ9xcQCjb2wAq3ViAKx5YACkcXEAq3V0AKZ5eQCsenoAtX98AAKa
        AwAmjBoAD6gWABewIwAjtzAATYAzACjBPABYskYANc5RAEjhbQD5lQUA/6IbAPuqNACPslYA15dTAPyy
        TQD+tlkAzJJwAMOuewDmrGkA67ltAP+7ZADyt24A/7xpAOq3eQDyv3UA/75wAIDGdAD/wHUA98R4AP/C
        ewD7yHwAemaCAExsugAgkKkAW/GQADWV+QBJrvwAUs3UAIyHiACUlJQArYOBALWCggC7hoMAt4+PAKqd
        jwCvkpIAvp2dALOlnACioqIAr6+vALmrqAC1tbUAuba0ALq6ugC9vLoAvr6+AMyCggDAjIwA14uKAMeT
        kgDUnZsA5pmZAPKTkwD/mZkA+Z2dAP+engDJqpgA36yUAMyynADtto0A/7qRAMqmpgDaqqgA2LmhAM6y
        sADKtrMA0re3ANK/vgDypKQA/6GgAPmlpQD/paUA8q+vAPmqqgD/qqoA/62tAOW/pgDnsKwA8L2tAP+p
        swDmvbsA/7GxAP+ztgD/tbUA/7O5APS6uwD+ubkA/76+AL/drgD/xocA/MuPAOHBmwDry5sA98KXAPbP
        lgD/ypQA/8WZAP/JmQD/zJkA/82eAPvRmQDVybkA7MSmAP/MpAD0wawA/8ysAOzTrgD+06cA5syzAP/M
        swD/zLsA59CyAPXbtgD/2rUAirHXAP+8xQCn3+EAwcHBAMfDwQDGxsYAzMzMANnGxgDS0dEA1tbWAN7Q
        0ADZ2NUA2traANzc3ADoxMQA8sXFAPnBwAD/wMAA+cbFAP/FxQD/zMIA/8zHAP/FzgD2z80A+cvKAP/L
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXFtcW1xcW1xbXAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD/j/////8AAP4Af/gP/wAA/AAH4AP/AAD4AACAAP8AAPAAAAAAfwAA4AAAAAA/AADgAAAAAB8AAOAA
        AAAADwAA4AAAAAAHAADgAAAAAAcAAOAAAAAAAwAA4AAAAAADAADgAAAAAAEAAOAAAAAAAQAA4AAAAAAB
        AADgAAAAAAAAAOAAAAAAAAAA4AAAAAAAAADgAAAAAAAAAOAAAAAAAAAA4AAAAAABAADgAAAAAAEAAOAA
        AAAAAQAA4AAAAAADAADgAAAAAAMAAOAAAAAABwAA4AAAAAAHAADgAAAAAA8AAOAAAAAAHwAA4AAAAAA/
        AADgAAAAAH8AAOAAAAAB/wAA4AAAAA//AADgAAAAA/8AAOAAAAAA/wAA4AAAAAH/AADgAAAAA/8AAOAA
        AAAH/wAAwAAAAA//AADAAAAAD/8AAIAAAAAH/wAAgAAAAAf/AACAAAAAA/8AAAAAAAAD/wAAAAAAAAH/
        AADAAAAQB/8AAP4AABg//wAA//8AP///AAAoAAAAIAAAAEAAAAABAAgAAAAAAAAEAAAAAAAAAAAAAAAB
        AAAAAQAAAAAAACYmJgAtKioANC8vADk5OQBGNzcAQXwsAENCQgBNTU0AUUdHAFxcXAByUlIAe3tVAGpo
        aAB8aGgAenFnAHFxcQB3c3MA3XEAAIdzXwCXbm4ApXd3ALJ2cQCxfHUAt3p6ALB+fgDHfH4ABpkEAC+a
        HQAPrx0AG7ktADysNQAghUIAKMdBADXVVQBK6HMA84cAAMiAPQDsnS8A/qkqAP6uPgC9hWkAp4t/AMaK
        WgDuq0kA/7FIAP24WgDEkXsA4qhiAOmwYgD0uWMA/7pkAPK+bAD+vGoA4K14APS/cQCAx3gA/8B2AP/C
        ewD/xHsA/sJ/AHZmiABEVaMAnX2OAFn3kwAxkPIASqz5AEbK0QCDgIAAkJCQALaFhQC+kYUAuIyQALSa
        mgClqagAuqChAL20pwCxsLEAt7e3ALu9vwDGhocA0oqGANOeggDDlJUAypaVAMSclgDOnJUA3ZSYAOWd
        nQD/mZkA/52dANuolwDmtpUAyaCgAMerqwDWqKgAy7ejANW3rwDNtbUA1bq3AO6srAD/oaEA/6emAPyn
        qAD/qqsA7KewAOu2tgD+sbAA/7a1APq4twD/urkA/769ALDZpQDZxJsA7seOAPLKjQD/yY4A9sqTAP7M
        lgD2w5gA88mfAP/NmgD/zZ0A/9KeANHfrgDGwrsA28eyANLFugDaz7oAyd6wAOHArgDyzKYA/82lAP/O
        qwD31qwA68KzAPPBtwD4xbcA/820APDFugD/zbsA5dGzAPzdtgD53r0A2eGsAM7iugCIttwA9rXOAKLM
        zADBwcEAx8rNAMvLywDMy8gAzs7OANrHxwDYw8sA08vLANHOzgDbz88A19PLAMnM0QDR0NAA1dHRANTU
        1ADU1tkA19jZANnZ2QDf2dkA2tvcANvc3ADe3d0A88TCAP/CwwD/xMMA/8bGAP3LwgD2yskA/8vKAP/O
        yQD/y84A+8zMAP/MzADx0M4A/cTZAOLY0QDp39UA5NvbAOjf3wD/0NAA+NbUAP/V1gD+09kA8t/fAPva
        2gD/29sA8eDPAP/myADq490A++rXANne5gD/zfEA3+HkAOLi4gDh4+UA4eTmAOfn5gDr5eIA7OjlAOTn
        6ADp6ekA7ezrAOrs7QDz4OQA/+HjAPDp5QD/7+AA8OrqAPXv7AD/6OgA/+/vAP727ADp7fIA7e/wAP7m
        /QDu8/wA9fLzAPv39gD/9PYA//n3APX3+QD/9P4A9vn9APv4+AD/+fkA///6APj6/AD/+P8A/v7+AAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAARAgKFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEQRCgcDAgcKEQAAAAAA
        DQkFBQMECgAAAAAAAAAAAAANStLhqpVFDQgEAgEIDgsUU19dFQsFAQ0AAAAAAAAARU+jz+rq6urkz2Aq
        DwsYZK68wtXawF4LAgcAAAAAAABPlU7O3Nzc5OrXe3svUWhsbq6xvMLa6s4UAwcAAAAAo05OlcXckR84
        cHFyUhpaZWhsbK6xvNXq6tgUAhEAAACZT05PxdyBGxsbGxwXZ1paWmhsbq6x2urq6roLAQAAAKNPo6q5
        14EdHh0bBlhsZVpaWmVsbq7q6urq6ksFEQAAoZnKqrnGfB4hHhsMrm5sZVpat8jI1erq6urq2AsEAACh
        mcqqucR8ISIeGyqxrm5sZb/fk5Pf5urq6urqKgJJAKOZyqq5xHwiIyEbVbyxrmxu5mkXF2Pq5tjh2OZe
        A0kAo5nOybmPkCMjIiBdvLGxrrzmUJSPGOHhzsXFz2IFSQCjo9DKw46QQEBDQUixsbGxvOpfSoYXv9Vs
        q7C8YwVJAKOj0tDDhoBDQkJBP7Gxsb/a5t9dFlfmrmVsbrFfBUkAo6PexcN7f0FBQkE9r9Xm6urq38i3
        39VaZWhsrlQHAACjny4yw3qDT5KSQj5i6urq6urmyMi3aFpaWmhoFREAAKRxJDHDdnp2dnp4WBnh6urq
        6tqurmxsZVpaWlgLAAAApXEkMMN0dHR0dHR0UUvq6urqwryxrmxsZVpaGEQAAAClcRI2wzk6Ojo6Ojo8
        KWLq6urVvLyxrmxsaFEOAAAAAKV+XKqPMzUzNTU1NTU1KV7q5tfVwrGxrm5RFAAAAAAApaNPlo4tJygo
        KCgoLS4uK0ab1NXV1bFqRkkAAAAAAACqmU+WhijG2MOGczcyKCcnJiUpR0hGFEkAAAAAAAAAAKWlyueO
        xOrq5eDg3tC5uY1yNCwmJhMDBAgAAAAAAAAAqsrq0mJim7rS5eHe3tLMycnHx6WAfU5FRQAAAAAAAACq
        qsqkFRQVFRhIXWKbuaq6yqqqpKSqT00AAAAAAAAAAJmqyoApFxcVFxkZGEZGU12q0t7SykoIAAAAAAAA
        AAAAT97ddTM6endcXFtWVVRUVLri4triTQEAAAAAAAAAAJnS59g6PHZ6eoSFhYqKiomItsLC1drYCAoA
        AAAAAAAAmNiOdDx2enqEhIWFioqMr69Lwtri6upFAQAAAAAAAACYTC46enp6hIWFioqMjK+xqwqe4urq
        6qoRAAAAAAAAAACZn5l/f39jYYKCh4eIr7JjRZnY0aWZmaEAAAAAAAAAAAAAAAAAAAAAAKGhoaGhoaEA
        AKGboZsAAAAAAAAAAAD4f///8AfAf+AAAB/AAAAPwAAAB4AAAAOAAAADgAAAAYAAAAGAAAAAgAAAAIAA
        AACAAAAAgAAAAIAAAAGAAAABgAAAA4AAAAOAAAAHgAAAD4AAAB+AAAB/gAAAP4AAAD+AAAB/gAAA/4AA
        AP8AAAB/AAAAfwAAAH+AAAB//8Bh/ygAAAAQAAAAIAAAAAEACAAAAAAAAAEAAAAAAAAAAAAAAAEAAAAB
        AAAAAAAALi4uADQ0NAA7MTEAPTIyADg0MwA6OjoATj4+AEJBQABLS0sAUFBQAFdXVwBeXV0AYElJAG9a
        WgBiYmIAbW1tAHFmYgB8ZWUAc3NzAHZ2dgB/fH4AgmNjAIhpaQCQdHQAnX19ALJ8fAAAoAcAHrEsACGt
        JQApqiEAMcNCAFPmawCcmmMAn510ALWAdADVmV0A8qtRAPewUAD/uV4AxoZ/ANKnbQD8tmgA/L9oAOCx
        cAD/wGgA/8dxAP/CdgD6xHgAXeC1ADamygA6lvsAYa31AISEhACzg4AAvYaHALuNjQC3kZEAuqOaAKak
        owCnqKgAsbGyAL6+vgDFnp8A/Z+eAMiqiQDSpIcAy6aeAMitnQDhuYAA47eIAOK2mAD/naQAwKalAM2l
        pQDLp6oAya+tAMewrwDGpbgA/6GgAPepqwD/rawA57ClAOy3owDnvqwA8r2gAP+zswD/s7QA/La2AP+x
        ugD/t70A/769APvLggD9xYsA+8eOAO7BnQD0y5YA/M2TAPjEnQD2yZsA3cKjANjEuAD+zKEA/86pAP/S
        pgD10q8A/86xAOfUtAD22rMA89yzAP/QuwDz4b4Ap6HDALy/wgD8u9AA8r7cAMbGxgDUw8MA1M/PANvM
        ywDY0cYA2czQANbV1QDsxMAA7cvMAP/GxgD9wcsA+svKAP/JygD/ycwA/87NAOPQxwD/1McA5sfRAP/L
        0gDk1d8A7NrbAP/Z2QD/290A/93eAPHlyQDm4tkA7eXfAPDr0wDi8tYA6OLhAOnl4QDs5OIA4uTpAOvk
        6gDt6ekA7enuAPHg5AD/6uoA/u3tAPnz4QDp6PAA6vH4AP/w8AD49PIA//XyAP/y9gD49fQA//3yAP/z
        /wD/+/sA//7+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAADwoTEwAAExMQEwAAAAAANTsVDAgFDRcYDgUBAAAAPHqjkJtfKFB9iZp1BwEAAD12jx0e
        IUhPUVuapnUFEwA9kYwfGyJaT1pyoaamEgIAPZFvIBxEgYGFTJihn0kBAD2WbTEyToGJhzp8gX9KBgA9
        bWk0M3CjpqRzfkBWNxMAKSVoY2RDl6ahgVZPTxYAAEFGLyctKkKXnomGWBoAAABxeC9cLy0mJEdUORkA
        AAAAeo6DlpySkmtFLBEAAAAAAHdlIzY4P0p2nZQQAAAAAHd4YV1iX1NSe5qaCgoAAAB3YF1mZ2puhEyI
        pnQ+AAAAd3d3d3d3d3d3d3d3AAAAAOGHAADAAwAAgAEAAIAAAACAAAAAgAAAAIAAAACAAAAAgAEAAIAD
        AACABwAAgA8AAIAPAAAABwAAAAcAAAAPAAA=
</value>
  </data>
</root>